{"version":3,"sources":["rewrite_clj/parser.cljs"],"sourcesContent":["(ns rewrite-clj.parser\n  (:require [rewrite-clj.parser.core :as p]\n            [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n;; ## Parser Core\n\n(defn parse\n  \"Parse next form from the given reader.\"\n  [^not-native reader]\n  (p/parse-next reader))\n\n(defn parse-all\n  \"Parse all forms from the given reader.\"\n  [^not-native reader]\n  (let [nodes (->> (repeatedly #(parse reader))\n                   (take-while identity)\n                   (doall))]\n    (with-meta\n      (node/forms-node nodes)\n      (meta (first nodes)))))\n\n;; ## Specialized Parsers\n\n(defn parse-string\n  \"Parse first form in the given string.\"\n  [s]\n  (parse (r/indexing-push-back-reader s)))\n\n(defn parse-string-all\n  \"Parse all forms in the given string.\"\n  [s]\n  (parse-all (r/indexing-push-back-reader s)))\n\n\n"],"mappings":";;;;;AAOA;;;AAAA,AAAMA,AAES;AAFf,AAGE,AAACC,AAAaC;;AAEhB;;;AAAA,AAAMC,AAES;AAFf,AAGE,AAAM,AAAW,AAAA,AAACC,AACD,AAACC,AAAWC,AACZ,AAACC;AAFD,AAAa,AAACP,AAAME;;AAArC,AAGE,AAACM,AACC,AAACC,AAAAA,AAAAA,AAAgBC,AAAAA,AACjB,AAACC,AAAK,AAACC,AAAMF;;AAInB;;;AAAA,AAAMG,AAEH;AAFH,AAGE,AAACb,AAAM,AAACc,AAAAA,AAAAA,AAA4BC,AAAAA;;AAEtC;;;AAAA,AAAMC,AAEH;AAFH,AAGE,AAACb,AAAU,AAACW,AAAAA,AAAAA,AAA4BC,AAAAA","names":["rewrite-clj.parser/parse","rewrite-clj.parser.core/parse-next","reader","rewrite-clj.parser/parse-all","cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1","cljs.core.take_while.cljs$core$IFn$_invoke$arity$2","cljs.core/identity","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","cljs.core/with-meta","rewrite-clj.node/forms-node","nodes","cljs.core/meta","cljs.core/first","rewrite-clj.parser/parse-string","rewrite-clj.reader/indexing-push-back-reader","s","rewrite-clj.parser/parse-string-all"]}