{"version":3,"sources":["rewrite_clj/node/reader_macro.cljs"],"sourcesContent":["(ns ^:no-doc rewrite-clj.node.reader-macro\n  (:require [rewrite-clj.node.protocols :as node]\n            [rewrite-clj.node.whitespace :as ws]))\n\n;; ## Node\n\n(defrecord ReaderNode [tag prefix suffix\n                       sexpr-fn sexpr-count\n                       children]\n  node/Node\n  (tag [_] tag)\n  (printable-only? [_]\n    (not sexpr-fn))\n  (sexpr [_]\n    (if sexpr-fn\n      (sexpr-fn (node/sexprs children))\n      (throw (js/Error. \"Unsupported operation\"))))\n  (length [_]\n    (-> (node/sum-lengths children)\n        (+ 1 (count prefix) (count suffix))))\n  (string [_]\n    (str \"#\" prefix (node/concat-strings children) suffix))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (when sexpr-count\n      (node/assert-sexpr-count children' sexpr-count))\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n(defrecord ReaderMacroNode [children]\n  node/Node\n  (tag [_] :reader-macro)\n  (printable-only?[_] false)\n  (sexpr [this]\n    (list 'read-string (node/string this)))\n  (length [_]\n    (inc (node/sum-lengths children)))\n  (string [_]\n    (str \"#\" (node/concat-strings children)))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (node/assert-sexpr-count children' 2)\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n(defrecord DerefNode [children]\n  node/Node\n  (tag [_] :deref)\n  (printable-only?[_] false)\n  (sexpr [this]\n    (list* 'deref (node/sexprs children)))\n  (length [_]\n    (inc (node/sum-lengths children)))\n  (string [_]\n    (str \"@\" (node/concat-strings children)))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (node/assert-sexpr-count children' 1)\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;; TODO:\n;; (node/make-printable! ReaderNode)\n;; (node/make-printable! ReaderMacroNode)\n;; (node/make-printable! DerefNode)\n\n;; ## Constructors\n\n(defn- ->node\n  [tag prefix suffix sexpr-fn sexpr-count children]\n  (when sexpr-count\n    (node/assert-sexpr-count children sexpr-count))\n  (->ReaderNode\n    tag prefix suffix\n    sexpr-fn sexpr-count\n    children))\n\n(defn var-node\n  \"Create node representing a var.\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node :var \"'\" \"\" #(list* 'var %) 1 children)\n    (recur [children])))\n\n(defn eval-node\n  \"Create node representing an inline evaluation. (`#=...`)\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->node\n      :eval \"=\" \"\"\n      #(list 'eval (list* 'quote %))\n      1 children)\n    (recur [children])))\n\n(defn reader-macro-node\n  \"Create node representing a reader macro. (`#... ...`)\"\n  ([children]\n   (->ReaderMacroNode children))\n  ([macro-node form-node]\n   (->ReaderMacroNode [macro-node (ws/spaces 1) form-node])))\n\n(defn deref-node\n  \"Create node representing the dereferencing of a form. (`@...`)\n   Takes either a seq of nodes or a single one.\"\n  [children]\n  (if (sequential? children)\n    (->DerefNode children)\n    (->DerefNode [children])))\n"],"mappings":"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","names":["this__4301__auto__","k__4302__auto__","k20516","G__20534","cljs.core/Keyword","tag","prefix","suffix","sexpr-fn","sexpr-count","children","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","else__4304__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__20535","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__20536","f__4321__auto__","ret__4323__auto__","k__4324__auto__","v__4325__auto__","init__4322__auto__","this__4320__auto__","cljs.core/pr-sequential-writer","writer__4316__auto__","opts__4317__auto__","keyval__4319__auto__","pr-pair__4318__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","cljs.core/RecordIter","G__20515","cljs.core/-iterator","cljs.core/nil-iter","__meta","__hash","cljs.core/count","h__4159__auto__","cljs.core/hash-unordered-coll","coll__4298__auto__","fexpr__20547","this__4297__auto__","other20518","this20517","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","cljs.core/contains?","k__4311__auto__","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","this__4310__auto__","cljs.core/not-empty","cljs.core/keyword-identical?","k__4309__auto__","expr__20552","pred__20551","G__20555","G__20556","G__20557","G__20558","G__20559","G__20560","G__20561","G__20562","G__20563","G__20564","G__20565","G__20566","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core/seq","cljs.core/MapEntry","cljs.core/vector?","entry__4307__auto__","this__4306__auto__","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","rewrite-clj.node.reader-macro/ReaderNode","cljs.core/List","cljs.core/-write","writer__4345__auto__","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","G__20523","cljs.core/record?","G__20567","extmap__4340__auto__","rewrite-clj.node.reader-macro/->ReaderNode","rewrite-clj.node.reader-macro/map->ReaderNode","cljs.core/not","G__20549","rewrite-clj.node.protocols/sexprs","js/Error","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","rewrite-clj.node.protocols/assert-sexpr-count","children'","this","k20569","G__20574","p__20578","vec__20579","G__20568","fexpr__20585","other20571","this20570","expr__20588","pred__20587","G__20590","G__20591","rewrite-clj.node.reader-macro/ReaderMacroNode","G__20572","G__20596","rewrite-clj.node.reader-macro/->ReaderMacroNode","rewrite-clj.node.reader-macro/map->ReaderMacroNode","k20598","G__20604","p__20605","vec__20606","G__20597","fexpr__20621","other20600","this20599","expr__20629","pred__20628","G__20631","G__20632","rewrite-clj.node.reader-macro/DerefNode","G__20601","G__20636","rewrite-clj.node.reader-macro/->DerefNode","rewrite-clj.node.reader-macro/map->DerefNode","cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2","rewrite-clj.node.reader-macro/->node","rewrite-clj.node.reader-macro/var-node","cljs.core/sequential?","p1__20638#","rewrite-clj.node.reader-macro/eval-node","p1__20639#","G__20641","rewrite-clj.node.reader-macro/reader-macro-node","macro-node","rewrite-clj.node.whitespace/spaces","form-node","rewrite-clj.node.reader-macro/deref-node"]}