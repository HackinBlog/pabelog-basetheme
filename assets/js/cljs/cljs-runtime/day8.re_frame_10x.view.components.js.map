{"version":3,"sources":["day8/re_frame_10x/view/components.cljs"],"sourcesContent":["(ns day8.re-frame-10x.view.components\n  (:require [clojure.string :as str]\n            [goog.fx.dom :as fx]\n            [day8.re-frame-10x.inlined-deps.re-frame.v0v10v6.re-frame.core :as rf]\n            [clojure.string :as str]\n            [day8.re-frame-10x.utils.re-com :as rc]\n            [day8.re-frame-10x.inlined-deps.reagent.v0v8v0.reagent.core :as r]\n            [devtools.prefs]\n            [devtools.formatters.core]\n            [react-highlight.js :as react-highlightjs]\n            [\"highlight.js/lib/languages/clojure\"])\n  (:require-macros [day8.re-frame-10x.utils.macros :refer [with-cljs-devtools-prefs]]))\n\n(defn search-input [{:keys [title placeholder on-save on-change on-stop]}]\n  (let [val  (r/atom title)\n        save #(let [v (-> @val str str/trim)]\n                (when (pos? (count v))\n                  (on-save v)))]\n    (fn []\n      [:input {:type        \"text\"\n               :value       @val\n               :auto-focus  true\n               :placeholder placeholder\n               :size        (if (> 20 (count (str @val)))\n                              25\n                              (count (str @val)))\n               :on-change   #(do (reset! val (-> % .-target .-value))\n                                 (on-change %))\n               :on-key-down #(case (.-which %)\n                               13 (do\n                                    (save)\n                                    (reset! val \"\"))\n                               nil)}])))\n\n(defn scroll! [el start end time]\n  (.play (fx/Scroll. el (clj->js start) (clj->js end) time)))\n\n(defn scrolled-to-end? [el tolerance]\n  ;; at-end?: element.scrollHeight - element.scrollTop === element.clientHeight\n  (> tolerance (- (.-scrollHeight el) (.-scrollTop el) (.-clientHeight el))))\n\n(defn autoscroll-list [{:keys [class scroll?]} child]\n  \"Reagent component that enables scrolling for the elements of its child dom-node.\n   Scrolling is only enabled if the list is scrolled to the end.\n   Scrolling can be set as option for debugging purposes.\n   Thanks to Martin Klepsch! Original code can be found here:\n       https://gist.github.com/martinklepsch/440e6fd96714fac8c66d892e0be2aaa0\"\n  (let [node          (r/atom nil)\n        should-scroll (r/atom true)]\n    (r/create-class\n      {:display-name \"autoscroll-list\"\n       :component-did-mount\n                     (fn [_]\n                       (scroll! @node [0 (.-scrollTop @node)] [0 (.-scrollHeight @node)] 0))\n       :component-will-update\n                     (fn [_]\n                       (reset! should-scroll (scrolled-to-end? @node 100)))\n       :component-did-update\n                     (fn [_]\n                       (when (and scroll? @should-scroll)\n                         (scroll! @node [0 (.-scrollTop @node)] [0 (.-scrollHeight @node)] 500)))\n       :reagent-render\n                     (fn [{:keys [class]} child]\n                       [:div {:class class :ref (fn [dom-node]\n                                                  (reset! node dom-node))}\n                        child])})))\n\n;; Data browser\n\n(defn string->css [css-string]\n  \"This function converts jsonml css-strings to valid css maps for hiccup.\n  Example: 'margin-left:0px;min-height:14px;' converts to\n           {:margin-left '0px', :min-height '14px'}\"\n\n  (->> (str/split css-string #\";\")\n       (map #(str/split % #\":\"))\n       (reduce (fn [acc [property value]]\n                 (assoc acc (keyword property) value)) {})))\n\n(declare jsonml->hiccup)\n\n(def default-cljs-devtools-prefs @devtools.prefs/default-config)\n\n(defn reset-wrapping [css-string]\n  (str/replace css-string #\"white-space:nowrap;\" \"\"))\n\n(def customized-cljs-devtools-prefs\n  {; Override some cljs-devtools default styles.\n\n   ; The goal here is to make default styles more flexible and wrap at the edge of our panel (we don't want horizontal\n   ; scrolling). Technically we want to remove all 'white-space:no-wrap'.\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/defaults.cljs\n   ;; Commented out as this causes some other issues too.\n   ;:header-style (reset-wrapping (:header-style default-cljs-devtools-prefs))\n   ;:expandable-style (reset-wrapping (:expandable-style default-cljs-devtools-prefs))\n   ;:item-style (reset-wrapping (:item-style default-cljs-devtools-prefs))\n\n   ; Hide the index spans on the left hand of collections. Shows how many elements in a collection.\n   :none-style                     \"display: none\"\n   :index-tag                      [:span :none-style]\n   :min-expandable-sequable-count-for-well-known-types\n   3\n\n   ; Our JSON renderer does not have hierarchy depth limit,\n   ; See https://github.com/binaryage/cljs-devtools/blob/master/src/lib/devtools/formatters/budgeting.cljs\n   :initial-hierarchy-depth-budget false})\n\n(def effective-cljs-devtools-prefs (merge default-cljs-devtools-prefs customized-cljs-devtools-prefs))\n\n(defn make-devtools-api-call [api-fn & args]\n  (with-cljs-devtools-prefs effective-cljs-devtools-prefs\n    (apply api-fn args)))\n\n(defn cljs-devtools-header [& args]\n  (apply make-devtools-api-call devtools.formatters.core/header-api-call args))\n\n(defn cljs-devtools-body [& args]\n  (apply make-devtools-api-call devtools.formatters.core/body-api-call args))\n\n(defn cljs-devtools-has-body [& args]\n  (apply make-devtools-api-call devtools.formatters.core/has-body-api-call args))\n\n(defn get-object [jsonml]\n  (.-object (get jsonml 1)))\n\n(defn get-config [jsonml]\n  (.-config (get jsonml 1)))\n\n(defn data-structure [jsonml path]\n  (let [expanded? (rf/subscribe [:app-db/node-expanded? path])]\n    (fn [jsonml path]\n      [:span\n       {:class (str \"re-frame-10x--object\" (when @expanded? \" expanded\"))}\n       [:span {:class    \"toggle\"\n               :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n        [:button.expansion-button (if @expanded? \"\u25bc\" \"\u25b6\")]]\n       (if (and @expanded? (cljs-devtools-has-body (get-object jsonml) (get-config jsonml)))\n         (jsonml->hiccup\n           (cljs-devtools-body\n             (get-object jsonml)\n             (get-config jsonml))\n           (conj path :body))\n         (jsonml->hiccup\n           (cljs-devtools-header\n             (get-object jsonml)\n             (get-config jsonml))\n           (conj path :header)))])))\n\n(defn jsonml->hiccup\n  \"JSONML is the format used by Chrome's Custom Object Formatters.\n  The spec is at https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview.\n\n  JSONML is pretty much Hiccup over JSON. Chrome's implementation of this can\n  be found at https://cs.chromium.org/chromium/src/third_party/WebKit/Source/devtools/front_end/object_ui/CustomPreviewComponent.js\n  \"\n  [jsonml path]\n  (if (number? jsonml)\n    jsonml\n    (let [[tag-name attributes & children] jsonml\n          tagnames #{\"div\" \"span\" \"ol\" \"li\" \"table\" \"tr\" \"td\"}]\n      (cond\n        (contains? tagnames tag-name) (into\n                                        [(keyword tag-name) {:style (-> (js->clj attributes)\n                                                                        (get \"style\")\n                                                                        (string->css))}]\n                                        (map-indexed (fn [i child] (jsonml->hiccup child (conj path i))))\n                                        children)\n\n        (= tag-name \"object\") [data-structure jsonml path]\n        :else jsonml))))\n\n(defn subtree [data title path]\n  (let [expanded? (rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [rc/v-box\n       :children\n       [[rc/h-box\n         :align :center\n         :class (str/join \" \" [\"re-frame-10x--object\"\n                               (when @expanded? \"expanded\")])\n         :children\n         [[:span {:class    \"toggle\"\n                  :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n           [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n          (or title \"data\")]]\n        [rc/h-box\n         :children [[:div {:style {:margin-left 20}}\n                     (cond\n                       (and @expanded?\n                            (or (string? data)\n                                (number? data)\n                                (boolean? data)\n                                (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n                       @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]]]]])))\n\n(defn subscription-render [data title path]\n  (let [expanded? (r/atom true) #_(rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [:div\n       {:class (str/join \" \" [\"re-frame-10x--object\"\n                              (when @expanded? \"expanded\")])}\n       #_[:span {:class    \"toggle\"\n                 :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n          [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n       (or title \"data\")\n       [:div {:style {:margin-left 20}}\n        (cond\n          (and @expanded?\n               (or (string? data)\n                   (number? data)\n                   (boolean? data)\n                   (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n          @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]])))\n\n(defn simple-render [data path & [class]]\n  (let [expanded? (r/atom true) #_(rf/subscribe [:app-db/node-expanded? path])]\n    (fn [data]\n      [:div\n       {:class (str/join \" \" [\"re-frame-10x--object\"\n                              (when @expanded? \"expanded\")\n                              class])}\n       #_[:span {:class    \"toggle\"\n                 :on-click #(rf/dispatch [:app-db/toggle-expansion path])}\n          [:button.expansion-button (if @expanded? \"\u25bc \" \"\u25b6 \")]]\n       [:div #_{:style {:margin-left 20}}\n        (cond\n          (and @expanded?\n               (or (string? data)\n                   (instance? js/RegExp data)\n                   (number? data)\n                   (boolean? data)\n                   (nil? data))) [:div {:style {:margin \"10px 0\"}} (prn-str data)]\n          @expanded? (jsonml->hiccup (cljs-devtools-header data) (conj path 0)))]])))\n\n(defn tag [class label]\n  [rc/box\n   :class (str \"rft-tag noselect \" class)\n   :child [:span {:style {:margin \"auto\"}} label]])\n\n(def highlight (r/adapt-react-class react-highlightjs))\n"],"mappings":"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","names":["p__19433","map__19434","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","day8.re-frame-10x.view.components/search-input","day8.re_frame_10x.inlined_deps.reagent.v0v8v0.reagent.core.atom.cljs$core$IFn$_invoke$arity$1","title","cljs.core/deref","val","clojure.string/trim","cljs.core/count","v","on-save","placeholder","cljs.core/reset!","p1__19431#","on-change","G__19436","p1__19432#","save","day8.re-frame-10x.view.components/scroll!","goog.fx.dom/Scroll","el","cljs.core/clj->js","start","end","time","day8.re-frame-10x.view.components/scrolled-to-end?","tolerance","p__19437","map__19438","day8.re-frame-10x.view.components/autoscroll-list","day8.re-frame-10x.inlined-deps.reagent.v0v8v0.reagent.core/create-class","node","should-scroll","and__4036__auto__","scroll?","p__19440","map__19441","class","dom-node","child","day8.re-frame-10x.view.components/string->css","clojure.string.split.cljs$core$IFn$_invoke$arity$2","css-string","cljs.core.map.cljs$core$IFn$_invoke$arity$2","p1__19443#","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__19444","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__19445","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","acc","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","property","value","day8.re-frame-10x.view.components/default-cljs-devtools-prefs","devtools.prefs/default-config","day8.re-frame-10x.view.components/reset-wrapping","clojure.string/replace","day8.re-frame-10x.view.components/customized-cljs-devtools-prefs","day8.re-frame-10x.view.components/effective-cljs-devtools-prefs","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","i__4642__auto__","len__4641__auto__","args__4647__auto__","cljs.core/IndexedSeq","day8.re-frame-10x.view.components/make-devtools-api-call","argseq__4648__auto__","cljs.core/first","seq19448","cljs.core/next","self__4628__auto__","G__19449","devtools.prefs/get-prefs","devtools.prefs/set-prefs!","prefs__19415__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","js/Error","previous-config__19414__auto__","api-fn","args","day8.re-frame-10x.view.components/cljs-devtools-header","self__4629__auto__","cljs.core/seq","seq19450","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","devtools.formatters.core/header-api-call","day8.re-frame-10x.view.components/cljs-devtools-body","seq19451","devtools.formatters.core/body-api-call","day8.re-frame-10x.view.components/cljs-devtools-has-body","seq19452","devtools.formatters.core/has-body-api-call","day8.re-frame-10x.view.components/get-object","jsonml","day8.re-frame-10x.view.components/get-config","day8.re-frame-10x.view.components/data-structure","G__19453","day8.re-frame-10x.inlined-deps.re-frame.v0v10v6.re-frame.core/subscribe","path","expanded?","G__19454","day8.re-frame-10x.inlined-deps.re-frame.v0v10v6.re-frame.core/dispatch","day8.re_frame_10x.view.components.cljs_devtools_has_body.cljs$core$IFn$_invoke$arity$variadic","G__19455","G__19456","day8.re-frame-10x.view.components/jsonml->hiccup","day8.re_frame_10x.view.components.cljs_devtools_body.cljs$core$IFn$_invoke$arity$variadic","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","G__19457","G__19458","day8.re_frame_10x.view.components.cljs_devtools_header.cljs$core$IFn$_invoke$arity$variadic","vec__19459","seq__19460","first__19461","cljs.core/contains?","tagnames","tag-name","cljs.core.into.cljs$core$IFn$_invoke$arity$3","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","attributes","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1","G__19462","G__19463","i","children","day8.re-frame-10x.view.components/subtree","G__19464","day8.re-frame-10x.utils.re-com/v-box","day8.re-frame-10x.utils.re-com/h-box","clojure.string.join.cljs$core$IFn$_invoke$arity$2","G__19465","or__4047__auto__","data","cljs.core/boolean?","cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic","day8.re-frame-10x.view.components/subscription-render","day8.re-frame-10x.view.components/simple-render","p__19475","vec__19477","seq19471","G__19472","G__19473","js/RegExp","day8.re-frame-10x.view.components/tag","day8.re-frame-10x.utils.re-com/box","label","day8.re-frame-10x.view.components/highlight","day8.re-frame-10x.inlined-deps.reagent.v0v8v0.reagent.core/adapt-react-class","js/module$node_modules$react_highlight_DOT_js$dist$main"]}