{"version":3,"sources":["rewrite_clj/node/comment.cljs"],"sourcesContent":["(ns rewrite-clj.node.comment\n  (:require [rewrite-clj.node.protocols :as node]))\n\n;; ## Node\n\n(defrecord CommentNode [s]\n  node/Node\n  (tag [_] :comment)\n  (printable-only? [_] true)\n  (sexpr [_]\n    (throw (js/Error. \"Unsupported operation\")))\n  (length [_]\n    (+ 1 (count s)))\n  (string [_]\n    (str \";\" s))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;;(node/make-printable! CommentNode)\n\n;; ## Constructor\n\n(defn comment-node\n  \"Create node representing an EDN comment.\"\n  [s]\n  (->CommentNode s))\n\n(defn comment?\n  \"Check whether a node represents a comment.\"\n  [node]\n  (= (node/tag node) :comment))\n\n\n\n"],"mappings":"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","names":["this__4301__auto__","k__4302__auto__","k19658","G__19662","cljs.core/Keyword","s","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","else__4304__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__19663","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__19664","f__4321__auto__","ret__4323__auto__","k__4324__auto__","v__4325__auto__","init__4322__auto__","this__4320__auto__","cljs.core/pr-sequential-writer","writer__4316__auto__","opts__4317__auto__","keyval__4319__auto__","pr-pair__4318__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","cljs.core/RecordIter","G__19657","cljs.core/-iterator","cljs.core/nil-iter","__meta","__hash","cljs.core/count","h__4159__auto__","cljs.core/hash-unordered-coll","coll__4298__auto__","fexpr__19670","this__4297__auto__","other19660","this19659","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","cljs.core/contains?","k__4311__auto__","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","this__4310__auto__","cljs.core/not-empty","cljs.core/keyword-identical?","k__4309__auto__","expr__19674","pred__19673","G__19676","G__19677","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core/seq","cljs.core/MapEntry","cljs.core/vector?","entry__4307__auto__","this__4306__auto__","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","rewrite-clj.node.comment/CommentNode","cljs.core/List","cljs.core/-write","writer__4345__auto__","G__19661","cljs.core/record?","G__19679","extmap__4340__auto__","rewrite-clj.node.comment/->CommentNode","rewrite-clj.node.comment/map->CommentNode","js/Error","this","rewrite-clj.node.comment/comment-node","rewrite-clj.node.comment/comment?","rewrite-clj.node.protocols/tag","node"]}