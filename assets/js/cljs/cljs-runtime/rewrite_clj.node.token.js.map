{"version":3,"sources":["rewrite_clj/node/token.cljs"],"sourcesContent":["(ns rewrite-clj.node.token\n  (:require [rewrite-clj.node.protocols :as node]))\n\n;; ## Node\n\n(defrecord TokenNode [value string-value]\n  node/Node\n  (tag [_] :token)\n  (printable-only? [_] false)\n  (sexpr [_] value)\n  (length [_] (.-length string-value))\n  (string [_] string-value)\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n; TODO\n;(node/make-printable! TokenNode)\n\n;; ## Constructor\n\n(defn token-node\n  \"Create node for an unspecified EDN token.\"\n  ([value]\n   (token-node value (pr-str value)))\n  ([value string-value]\n  (->TokenNode value string-value)))\n"],"mappings":"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","names":["this__4301__auto__","k__4302__auto__","k20751","G__20757","cljs.core/Keyword","value","string-value","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","else__4304__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__20758","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__20759","f__4321__auto__","ret__4323__auto__","k__4324__auto__","v__4325__auto__","init__4322__auto__","this__4320__auto__","cljs.core/pr-sequential-writer","writer__4316__auto__","opts__4317__auto__","keyval__4319__auto__","pr-pair__4318__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","cljs.core/RecordIter","G__20750","cljs.core/-iterator","cljs.core/nil-iter","__meta","__hash","cljs.core/count","h__4159__auto__","cljs.core/hash-unordered-coll","coll__4298__auto__","fexpr__20809","this__4297__auto__","other20753","this20752","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","cljs.core/contains?","k__4311__auto__","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","this__4310__auto__","cljs.core/not-empty","cljs.core/keyword-identical?","k__4309__auto__","expr__20824","pred__20823","G__20829","G__20830","G__20835","G__20836","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core/seq","cljs.core/MapEntry","cljs.core/vector?","entry__4307__auto__","this__4306__auto__","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","rewrite-clj.node.token/TokenNode","cljs.core/List","cljs.core/-write","writer__4345__auto__","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","G__20754","cljs.core/record?","G__20858","extmap__4340__auto__","rewrite-clj.node.token/->TokenNode","rewrite-clj.node.token/map->TokenNode","this","G__20861","rewrite-clj.node.token/token-node","js/Error","rewrite_clj.node.token.token_node.cljs$core$IFn$_invoke$arity$2","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic"]}