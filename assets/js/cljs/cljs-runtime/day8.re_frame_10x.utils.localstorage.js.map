{"version":3,"sources":["day8/re_frame_10x/utils/localstorage.cljs"],"sourcesContent":["(ns day8.re-frame-10x.utils.localstorage\n  (:require [goog.storage.Storage]\n            [goog.storage.mechanism.HTML5LocalStorage]\n            [cljs.reader :as reader]\n            [clojure.string :as str])\n  (:refer-clojure :exclude [get]))\n\n(def storage (goog.storage.Storage. (goog.storage.mechanism.HTML5LocalStorage.)))\n\n(def safe-prefix \"day8.re-frame-10x.\")\n\n(defn- safe-key [key]\n  \"Adds a unique prefix to local storage keys to ensure they don't collide with the host application\"\n  (str safe-prefix key))\n\n(defn get\n  \"Gets a re-frame-10x value from local storage.\"\n  ([key]\n   (get key nil))\n  ([key not-found]\n   (let [value (.get storage (safe-key key))]\n     (if (undefined? value)\n       not-found\n       (reader/read-string value)))))\n\n(defn save!\n  \"Saves a re-frame-10x value to local storage.\"\n  [key value]\n  (.set storage (safe-key key) (pr-str value)))\n\n(defn delete-all-keys!\n  \"Deletes all re-frame-10x config keys\"\n  []\n  (doseq [k (js/Object.keys js/localStorage)]\n    (when (str/starts-with? k safe-prefix)\n      (.remove storage k))))\n"],"mappings":";;;;;;AAOA,AAAKA,AAAQ,AAAAC,AAAuB,AAAAC;AAEpC,AAAA,AAAKC;AAEL,AAAA,AAAOC,AAAU;AAAjB,AAAA;AAEE,AAAKD,AAAYE;;AAEnB,AAAA;;;AAAA,AAAA,AAAME;AAAN,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAD;AAAA;AAAA,AAAAC,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;AAAA,AAAA,AAAA,AAAMD,AAEF;AAFJ,AAGG,AAAA,AAACE,AAAIJ;;;AAHR,AAAA,AAAA,AAAME,AAIF,AAAI;AAJR,AAKG,AAAM,AAAM,AAAMP,AAAQ,AAACI,AAASC;AAApC,AACE,AAAI,AAAYK;AACdC;;AACA,AAACC,AAAmBF;;;;AAR3B,AAAA,AAAA,AAAMH;;AAAN,AAUA;;;AAAA,AAAMM,AAEH,AAAI;AAFP,AAGE,AAAMb,AAAQ,AAACI,AAASC,AAAK,AAACS,AAAOJ;;AAEvC;;;AAAA,AAAMK;AAAN,AAGE,AAAA,AAAA,AAAAC,AAAU,AAACa,AAAeC;AAA1B,AAAA;AAAA,AAAA;AAAA,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAb,AAAAC;AAAA,AAAA,AAAAC,AAAAF,AAAQ;AAAR,AAAA,AACE,AAAM,AAACc,AAAiBC,AAAE7B;AAA1B,AACE,AAASH,AAAQgC;;AADnB;;AADF;AAAA,AAAAZ;AAAAD;AAAAD;AAAA,AAAAD,AAAA;;;;;;;AAAA,AAAA,AAAA,AAAAD,AAAAI;AAAA,AAAA,AAAAC;AAAA,AAAA,AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAA,AAAAG,AAAAH;AAAA,AAAA,AAAA,AAAAI,AAAAJ;AAAAK;AAAA,AAAAC,AAAAD;AAAA;;;;;;;AAAA,AAAA,AAAAE,AAAAP,AAAQ;AAAR,AAAA,AACE,AAAM,AAACW,AAAiBC,AAAE7B;AAA1B,AACE,AAASH,AAAQgC;;AADnB;;AADF;AAAA,AAAA,AAAAJ,AAAAR;AAAA;AAAA;AAAA;;;;;;;;AAAA","names":["day8.re-frame-10x.utils.localstorage/storage","goog.storage/Storage","goog.storage.mechanism/HTML5LocalStorage","day8.re-frame-10x.utils.localstorage/safe-prefix","day8.re-frame-10x.utils.localstorage/safe-key","key","G__23907","day8.re-frame-10x.utils.localstorage/get","js/Error","day8.re_frame_10x.utils.localstorage.get.cljs$core$IFn$_invoke$arity$2","value","not-found","cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1","day8.re-frame-10x.utils.localstorage/save!","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","day8.re-frame-10x.utils.localstorage/delete-all-keys!","cljs.core/seq","i__23923","count__23922","chunk__23921","seq__23920","temp__5457__auto__","cljs.core/chunked-seq?","cljs.core/chunk-first","cljs.core/chunk-rest","c__4461__auto__","cljs.core/count","cljs.core/first","cljs.core/next","js/Object.keys","js/localStorage","clojure.string/starts-with?","k"]}