{"version":3,"sources":["cljs/user.cljs"],"sourcesContent":["(ns cljs.user\n  (:require [shadow.loader :as loader]))\n\n(defn cb* [message]\n  (fn []\n    (js/console.log message)))\n\n(defmulti render* (fn [modules] modules))\n\n(defmethod render* \"footer-subscription-form\" [_]\n  (com.clupclup.app-script.footer-subscription-form/render))\n\n(defmethod render* \"hamburger-menu\" [_]\n  (com.clupclup.app-script.hamburger-menu/render))\n\n(defmethod render* \"home-subscription-form\" [_]\n  (com.clupclup.app-script.home-subscription-form/render))\n\n(defmethod render* :default [_] :noop)\n\n(defn ^:export render [module]\n  (render* module))\n\n\n(defn ^:export reset\n  ([]\n   (reset \"dev\"))\n  ([module]\n   (reset module (cb* (str \"Module \" module \" loaded!\")) (cb* (str \"Failed to load \" module \" module!\"))))\n  ([module ok-cb err-cb]\n   (-> (loader/load module)\n       (.then ok-cb err-cb))))\n\n(defn reset-all*\n  [modules]\n  (if-let [module (first modules)]\n    (do (js/console.log (str \"Reseting \" module))\n        (reset module\n               #(do (render module)\n                    (reset-all* (rest modules)))\n               #(reset-all* [])))\n    (js/console.log \"Done!\")))\n\n(defn ^:dev/after-load reset-all []\n  (reset-all* [\"dev\" \"footer-subscription-form\" \"hamburger-menu\" \"home-subscription-form\"]))\n\n(defn ^:export init [] (reset))"],"mappings":";;;AAGA,AAAA,AAAMA,AAAK;AAAX,AACE;AAAA,AACE,AAACC,AAAeC;;;AAEpB,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAUU;AAAV,AAAA,AAAAV,AAAA;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAA,AAAAA,AAAA;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAC,AAAAA,AAAAA;;AAAA,AAAA,AAAAC,AAAA,AAAAC,AAAA,AAAA,AAAkB;AAAK;AAAL,AAAcO;;AAAhC,AAAAN,AAAAC,AAAAC,AAAAC,AAAAC;;;AAEA,AAAAC,AAAA,AAAA,AAA+C;AAA/C,AACE,AAACE;;AAEH,AAAAF,AAAA,AAAA,AAAqC;AAArC,AACE,AAACG;;AAEH,AAAAH,AAAA,AAAA,AAA6C;AAA7C,AACE,AAACI;;AAEH,AAAAJ,AAAA,AAAA,AAA6B;AAA7B,AAAA;;AAEA,AAAA,AAAeK,AAAQ;AAAvB,AACE,AAACL,AAAAA,AAAAA,AAAQM,AAAAA;;;AAGX,AAAA,AAAA,AAAA,AAAeE;AAAf,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAD;AAAA;AAAA,AAAAC;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA;;;AAAA;AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA;;;;;;AAAA,AAAA,AAAA,AAAeD;AAAf,AAEG,AAAA,AAACE;;;AAFJ,AAAA,AAAA,AAAeF,AAGX;AAHJ,AAIG,AAACG,AAAML,AAAO,AAACtB,AAAI,AAAA,AAAA,AAAesB,AAAoB,AAACtB,AAAI,AAAA,AAAA,AAAuBsB;;;AAJrF,AAAA,AAAA,AAAeE,AAKX,AAAO,AAAM;AALjB,AAMO,AAACI,AAAYN,AACb,AAAOO,AAAMC;;;AAPpB,AAAA,AAAA,AAAeN;;AAAf,AASA,AAAA,AAAMO,AACH;AADH,AAEE,AAAA,AAAgB,AAACE,AAAMhB;AAAvB,AAAA,AAAAe;AAAA,AAAAA,AAAS;AAAT,AACE,AAAI,AAAC/B,AAAe,AAAA,AAAiBqB;;AACjC,AAAA,AAACK,AAAML;;AAAP,AACQ,AAAI,AAACD,AAAOC;;AACR,AAAA,AAAY,AAACa,AAAKlB;AAAlB,AAAA,AAAAiB,AAAAA,AAACH,AAAAA,AAAAA;;AAFb;;AAAA,AAGQ,AAAA,AAAA;AAAA,AAAA,AAAAK,AAAAA,AAACL,AAAAA,AAAAA;;;;AACb,AAAA,AAAC9B;;;AAEL,AAAA,AAAuBoC;AAAvB,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAACN;;AAEH,AAAA,AAAeO;AAAf,AAAuB,AAACC","names":["cljs.user/cb*","js/console.log","message","js/cljs","js/cljs.user","js/cljs.user.render*","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.core.get.cljs$core$IFn$_invoke$arity$3","fexpr__13558","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","hierarchy__4528__auto__","method-table__4524__auto__","prefer-table__4525__auto__","method-cache__4526__auto__","cached-hierarchy__4527__auto__","cljs.user/render*","modules","com.clupclup.app-script.footer-subscription-form/render","com.clupclup.app-script.hamburger-menu/render","com.clupclup.app-script.home-subscription-form/render","cljs.user/render","module","G__13560","cljs.user/reset","js/Error","cljs.user.reset.cljs$core$IFn$_invoke$arity$1","cljs.user.reset.cljs$core$IFn$_invoke$arity$3","shadow.loader/load","ok-cb","err-cb","cljs.user/reset-all*","temp__5455__auto__","cljs.core/first","G__13561","cljs.core/rest","G__13562","cljs.user/reset-all","cljs.user/init","cljs.user.reset.cljs$core$IFn$_invoke$arity$0"]}